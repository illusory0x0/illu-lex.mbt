{
  "header": "",
  "rules": [
    {
      "name": "token",
      "signature": "token[T : @lexbuf.IStringLexbuf](lexbuf : T) -> (Token, Int, Int) ",
      "patterns": [
        [
          {
            "$tag": "Repetition",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  9,
                  10
                ],
                [
                  13,
                  13
                ],
                [
                  32,
                  32
                ]
              ]
            }
          },
          " token(lexbuf) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  47,
                  47
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    47,
                    47
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Alter",
                  "0": {
                    "$tag": "Repetition",
                    "0": {
                      "$tag": "Character",
                      "0": [
                        [
                          0,
                          9
                        ],
                        [
                          11,
                          1114111
                        ]
                      ]
                    }
                  },
                  "1": {
                    "$tag": "Epsilon"
                  }
                },
                "1": {
                  "$tag": "Alter",
                  "0": {
                    "$tag": "Character",
                    "0": [
                      [
                        10,
                        10
                      ]
                    ]
                  },
                  "1": {
                    "$tag": "Epsilon"
                  }
                }
              }
            }
          },
          " token(lexbuf) "
        ],
        [
          {
            "$tag": "EOF"
          },
          " (EOI, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  114,
                  114
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    117,
                    117
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      108,
                      108
                    ]
                  ]
                },
                "1": {
                  "$tag": "Concat",
                  "0": {
                    "$tag": "Character",
                    "0": [
                      [
                        101,
                        101
                      ]
                    ]
                  },
                  "1": {
                    "$tag": "Concat",
                    "0": {
                      "$tag": "Repetition",
                      "0": {
                        "$tag": "Character",
                        "0": [
                          [
                            9,
                            10
                          ],
                          [
                            13,
                            13
                          ],
                          [
                            32,
                            32
                          ]
                        ]
                      }
                    },
                    "1": {
                      "$tag": "Concat",
                      "0": {
                        "$tag": "Capture",
                        "0": {
                          "$tag": "Concat",
                          "0": {
                            "$tag": "Capture",
                            "0": {
                              "$tag": "Concat",
                              "0": {
                                "$tag": "Character",
                                "0": [
                                  [
                                    95,
                                    95
                                  ],
                                  [
                                    97,
                                    122
                                  ]
                                ]
                              },
                              "1": {
                                "$tag": "Alter",
                                "0": {
                                  "$tag": "Repetition",
                                  "0": {
                                    "$tag": "Character",
                                    "0": [
                                      [
                                        48,
                                        57
                                      ],
                                      [
                                        65,
                                        90
                                      ],
                                      [
                                        95,
                                        95
                                      ],
                                      [
                                        97,
                                        122
                                      ]
                                    ]
                                  }
                                },
                                "1": {
                                  "$tag": "Epsilon"
                                }
                              }
                            },
                            "1": "t1"
                          },
                          "1": {
                            "$tag": "Repetition",
                            "0": {
                              "$tag": "Character",
                              "0": [
                                [
                                  0,
                                  122
                                ],
                                [
                                  124,
                                  1114111
                                ]
                              ]
                            }
                          }
                        },
                        "1": "t2"
                      },
                      "1": {
                        "$tag": "Concat",
                        "0": {
                          "$tag": "Alter",
                          "0": {
                            "$tag": "Repetition",
                            "0": {
                              "$tag": "Character",
                              "0": [
                                [
                                  9,
                                  10
                                ],
                                [
                                  13,
                                  13
                                ],
                                [
                                  32,
                                  32
                                ]
                              ]
                            }
                          },
                          "1": {
                            "$tag": "Epsilon"
                          }
                        },
                        "1": {
                          "$tag": "Character",
                          "0": [
                            [
                              123,
                              123
                            ]
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "\n      (RULE_LC_IDENT_LPAREN_CODE_RPAREN_ARROW_CODE_LBRACE((t1, t2)), $startpos, $endpos)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  112,
                  112
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    97,
                    97
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      114,
                      114
                    ]
                  ]
                },
                "1": {
                  "$tag": "Concat",
                  "0": {
                    "$tag": "Character",
                    "0": [
                      [
                        115,
                        115
                      ]
                    ]
                  },
                  "1": {
                    "$tag": "Concat",
                    "0": {
                      "$tag": "Character",
                      "0": [
                        [
                          101,
                          101
                        ]
                      ]
                    },
                    "1": {
                      "$tag": "Concat",
                      "0": {
                        "$tag": "Alter",
                        "0": {
                          "$tag": "Repetition",
                          "0": {
                            "$tag": "Character",
                            "0": [
                              [
                                9,
                                10
                              ],
                              [
                                13,
                                13
                              ],
                              [
                                32,
                                32
                              ]
                            ]
                          }
                        },
                        "1": {
                          "$tag": "Epsilon"
                        }
                      },
                      "1": {
                        "$tag": "Character",
                        "0": [
                          [
                            123,
                            123
                          ]
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          " (PARSE_LBRACE, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  61,
                  61
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  62,
                  62
                ]
              ]
            }
          },
          " (FAT_ARROW, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                95,
                95
              ]
            ]
          },
          " (UNDERSCORE, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                123,
                123
              ]
            ]
          },
          " \n      let buffer = StringBuilder::new()\n      let end_pos = code_rbrace(buffer, lexbuf)\n      (LBRACE_CODE_RBRACE(buffer.to_string()), $startpos, end_pos)\n    "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                125,
                125
              ]
            ]
          },
          " (RBRACE, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                40,
                40
              ]
            ]
          },
          " (LPAREN, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                41,
                41
              ]
            ]
          },
          " (RPAREN, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                91,
                91
              ]
            ]
          },
          " (LBRACKET, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                93,
                93
              ]
            ]
          },
          " (RBRACKET, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                61,
                61
              ]
            ]
          },
          " (EQ, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                58,
                58
              ]
            ]
          },
          " (COLON, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                59,
                59
              ]
            ]
          },
          " (SEMICOLON, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                124,
                124
              ]
            ]
          },
          " (BAR, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                42,
                42
              ]
            ]
          },
          " (STAR, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                43,
                43
              ]
            ]
          },
          " (PLUS, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                63,
                63
              ]
            ]
          },
          " (QUESTION, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                45,
                45
              ]
            ]
          },
          " (MINUS, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                94,
                94
              ]
            ]
          },
          " (CARET, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                92,
                92
              ]
            ]
          },
          " (BACKSLASH, $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Capture",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      0,
                      38
                    ],
                    [
                      40,
                      91
                    ],
                    [
                      93,
                      1114111
                    ]
                  ]
                },
                "1": "t"
              },
              "1": {
                "$tag": "Character",
                "0": [
                  [
                    39,
                    39
                  ]
                ]
              }
            }
          },
          " (CHAR(t), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      98,
                      98
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          " (CHAR('\\u{08}'), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      116,
                      116
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          " (CHAR('\\t'), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      118,
                      118
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          " (CHAR('\\u{0b}'), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      114,
                      114
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          " (CHAR('\\r'), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      110,
                      110
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          " (CHAR('\\n'), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      92,
                      92
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          " (CHAR('\\\\'), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          " (CHAR('\\''), $startpos, $endpos) "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      120,
                      120
                    ]
                  ]
                },
                "1": {
                  "$tag": "Concat",
                  "0": {
                    "$tag": "Capture",
                    "0": {
                      "$tag": "Concat",
                      "0": {
                        "$tag": "Character",
                        "0": [
                          [
                            48,
                            57
                          ],
                          [
                            65,
                            70
                          ],
                          [
                            97,
                            102
                          ]
                        ]
                      },
                      "1": {
                        "$tag": "Character",
                        "0": [
                          [
                            48,
                            57
                          ],
                          [
                            65,
                            70
                          ],
                          [
                            97,
                            102
                          ]
                        ]
                      }
                    },
                    "1": "t"
                  },
                  "1": {
                    "$tag": "Character",
                    "0": [
                      [
                        39,
                        39
                      ]
                    ]
                  }
                }
              }
            }
          },
          "\n      let code = @strconv.parse_int?(t, base=16).unwrap()\n      (CHAR(Char::from_int(code)), $startpos, $endpos)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      117,
                      117
                    ]
                  ]
                },
                "1": {
                  "$tag": "Concat",
                  "0": {
                    "$tag": "Capture",
                    "0": {
                      "$tag": "Concat",
                      "0": {
                        "$tag": "Character",
                        "0": [
                          [
                            48,
                            57
                          ],
                          [
                            65,
                            70
                          ],
                          [
                            97,
                            102
                          ]
                        ]
                      },
                      "1": {
                        "$tag": "Concat",
                        "0": {
                          "$tag": "Character",
                          "0": [
                            [
                              48,
                              57
                            ],
                            [
                              65,
                              70
                            ],
                            [
                              97,
                              102
                            ]
                          ]
                        },
                        "1": {
                          "$tag": "Concat",
                          "0": {
                            "$tag": "Character",
                            "0": [
                              [
                                48,
                                57
                              ],
                              [
                                65,
                                70
                              ],
                              [
                                97,
                                102
                              ]
                            ]
                          },
                          "1": {
                            "$tag": "Character",
                            "0": [
                              [
                                48,
                                57
                              ],
                              [
                                65,
                                70
                              ],
                              [
                                97,
                                102
                              ]
                            ]
                          }
                        }
                      }
                    },
                    "1": "t"
                  },
                  "1": {
                    "$tag": "Character",
                    "0": [
                      [
                        39,
                        39
                      ]
                    ]
                  }
                }
              }
            }
          },
          "\n      let code = @strconv.parse_int?(t, base=16).unwrap()\n      (CHAR(Char::from_int(code)), $startpos, $endpos)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  39,
                  39
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    92,
                    92
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      117,
                      117
                    ]
                  ]
                },
                "1": {
                  "$tag": "Concat",
                  "0": {
                    "$tag": "Character",
                    "0": [
                      [
                        123,
                        123
                      ]
                    ]
                  },
                  "1": {
                    "$tag": "Concat",
                    "0": {
                      "$tag": "Capture",
                      "0": {
                        "$tag": "Repetition",
                        "0": {
                          "$tag": "Character",
                          "0": [
                            [
                              48,
                              57
                            ],
                            [
                              65,
                              70
                            ],
                            [
                              97,
                              102
                            ]
                          ]
                        }
                      },
                      "1": "t"
                    },
                    "1": {
                      "$tag": "Concat",
                      "0": {
                        "$tag": "Character",
                        "0": [
                          [
                            125,
                            125
                          ]
                        ]
                      },
                      "1": {
                        "$tag": "Character",
                        "0": [
                          [
                            39,
                            39
                          ]
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "\n      let code = @strconv.parse_int?(t, base=16).unwrap()\n      (CHAR(Char::from_int(code)), $startpos, $endpos)\n    "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                34,
                34
              ]
            ]
          },
          "\n      let buffer = StringBuilder::new()\n      let end_pos = string_inner_rquote(buffer, lexbuf)\n      (STRING(buffer.to_string()), $startpos, end_pos)\n    "
        ],
        [
          {
            "$tag": "Capture",
            "0": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    95,
                    95
                  ],
                  [
                    97,
                    122
                  ]
                ]
              },
              "1": {
                "$tag": "Alter",
                "0": {
                  "$tag": "Repetition",
                  "0": {
                    "$tag": "Character",
                    "0": [
                      [
                        48,
                        57
                      ],
                      [
                        65,
                        90
                      ],
                      [
                        95,
                        95
                      ],
                      [
                        97,
                        122
                      ]
                    ]
                  }
                },
                "1": {
                  "$tag": "Epsilon"
                }
              }
            },
            "1": "t"
          },
          "\n      (match t {\n        \"eof\" => EOF\n        \"regex\" => REGEX\n        \"as\" => AS\n        _ => LC_IDENT(t)\n      }, $startpos, $endpos)\n    "
        ]
      ]
    },
    {
      "name": "string_inner_rquote",
      "signature": "string_inner_rquote[T : @lexbuf.IStringLexbuf](buffer : StringBuilder, lexbuf : T) -> Int ",
      "patterns": [
        [
          {
            "$tag": "Character",
            "0": [
              [
                34,
                34
              ]
            ]
          },
          " $endpos "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  98,
                  98
                ]
              ]
            }
          },
          "\n      buffer.write_char('\\u{08}')\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  116,
                  116
                ]
              ]
            }
          },
          "\n      buffer.write_char('\\t')\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  118,
                  118
                ]
              ]
            }
          },
          "\n      buffer.write_char('\\u{0b}')\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  114,
                  114
                ]
              ]
            }
          },
          "\n      buffer.write_char('\\r')\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  110,
                  110
                ]
              ]
            }
          },
          "\n      buffer.write_char('\\n')\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            }
          },
          "\n      buffer.write_char('\\\\')\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Character",
              "0": [
                [
                  34,
                  34
                ]
              ]
            }
          },
          "\n      buffer.write_char('\"')\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    120,
                    120
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Capture",
                  "0": {
                    "$tag": "Concat",
                    "0": {
                      "$tag": "Character",
                      "0": [
                        [
                          48,
                          57
                        ],
                        [
                          65,
                          70
                        ],
                        [
                          97,
                          102
                        ]
                      ]
                    },
                    "1": {
                      "$tag": "Character",
                      "0": [
                        [
                          48,
                          57
                        ],
                        [
                          65,
                          70
                        ],
                        [
                          97,
                          102
                        ]
                      ]
                    }
                  },
                  "1": "t"
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          "\n      let code = @strconv.parse_int?(t, base=16).unwrap()\n      buffer.write_char(Char::from_int(code))\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    117,
                    117
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Capture",
                  "0": {
                    "$tag": "Concat",
                    "0": {
                      "$tag": "Character",
                      "0": [
                        [
                          48,
                          57
                        ],
                        [
                          65,
                          70
                        ],
                        [
                          97,
                          102
                        ]
                      ]
                    },
                    "1": {
                      "$tag": "Concat",
                      "0": {
                        "$tag": "Character",
                        "0": [
                          [
                            48,
                            57
                          ],
                          [
                            65,
                            70
                          ],
                          [
                            97,
                            102
                          ]
                        ]
                      },
                      "1": {
                        "$tag": "Concat",
                        "0": {
                          "$tag": "Character",
                          "0": [
                            [
                              48,
                              57
                            ],
                            [
                              65,
                              70
                            ],
                            [
                              97,
                              102
                            ]
                          ]
                        },
                        "1": {
                          "$tag": "Character",
                          "0": [
                            [
                              48,
                              57
                            ],
                            [
                              65,
                              70
                            ],
                            [
                              97,
                              102
                            ]
                          ]
                        }
                      }
                    }
                  },
                  "1": "t"
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            }
          },
          "\n      let code = @strconv.parse_int?(t, base=16).unwrap()\n      buffer.write_char(Char::from_int(code))\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Concat",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  92,
                  92
                ]
              ]
            },
            "1": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    117,
                    117
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      123,
                      123
                    ]
                  ]
                },
                "1": {
                  "$tag": "Concat",
                  "0": {
                    "$tag": "Capture",
                    "0": {
                      "$tag": "Repetition",
                      "0": {
                        "$tag": "Character",
                        "0": [
                          [
                            48,
                            57
                          ],
                          [
                            65,
                            70
                          ],
                          [
                            97,
                            102
                          ]
                        ]
                      }
                    },
                    "1": "t"
                  },
                  "1": {
                    "$tag": "Concat",
                    "0": {
                      "$tag": "Character",
                      "0": [
                        [
                          125,
                          125
                        ]
                      ]
                    },
                    "1": {
                      "$tag": "Character",
                      "0": [
                        [
                          39,
                          39
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "\n      let code = @strconv.parse_int?(t, base=16).unwrap()\n      buffer.write_char(Char::from_int(code))\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Capture",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  0,
                  1114111
                ]
              ]
            },
            "1": "t"
          },
          "\n      buffer.write_char(t)\n      string_inner_rquote(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "EOF"
          },
          " abort(\"Unexpected end of input\") "
        ]
      ]
    },
    {
      "name": "code_rbrace",
      "signature": "code_rbrace[T : @lexbuf.IStringLexbuf](buffer : StringBuilder, lexbuf : T) -> Int ",
      "patterns": [
        [
          {
            "$tag": "Capture",
            "0": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    47,
                    47
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      47,
                      47
                    ]
                  ]
                },
                "1": {
                  "$tag": "Concat",
                  "0": {
                    "$tag": "Repetition",
                    "0": {
                      "$tag": "Character",
                      "0": [
                        [
                          0,
                          9
                        ],
                        [
                          11,
                          1114111
                        ]
                      ]
                    }
                  },
                  "1": {
                    "$tag": "Character",
                    "0": [
                      [
                        10,
                        10
                      ]
                    ]
                  }
                }
              }
            },
            "1": "t"
          },
          "\n      buffer.write_string(t)\n      code_rbrace(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Capture",
            "0": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    34,
                    34
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Alter",
                  "0": {
                    "$tag": "Repetition",
                    "0": {
                      "$tag": "Alter",
                      "0": {
                        "$tag": "Character",
                        "0": [
                          [
                            0,
                            33
                          ],
                          [
                            35,
                            91
                          ],
                          [
                            93,
                            1114111
                          ]
                        ]
                      },
                      "1": {
                        "$tag": "Concat",
                        "0": {
                          "$tag": "Character",
                          "0": [
                            [
                              92,
                              92
                            ]
                          ]
                        },
                        "1": {
                          "$tag": "Character",
                          "0": [
                            [
                              0,
                              1114111
                            ]
                          ]
                        }
                      }
                    }
                  },
                  "1": {
                    "$tag": "Epsilon"
                  }
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      34,
                      34
                    ]
                  ]
                }
              }
            },
            "1": "t"
          },
          "\n      buffer.write_string(t)\n      code_rbrace(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Capture",
            "0": {
              "$tag": "Concat",
              "0": {
                "$tag": "Character",
                "0": [
                  [
                    39,
                    39
                  ]
                ]
              },
              "1": {
                "$tag": "Concat",
                "0": {
                  "$tag": "Character",
                  "0": [
                    [
                      0,
                      38
                    ],
                    [
                      40,
                      91
                    ],
                    [
                      93,
                      1114111
                    ]
                  ]
                },
                "1": {
                  "$tag": "Character",
                  "0": [
                    [
                      39,
                      39
                    ]
                  ]
                }
              }
            },
            "1": "t"
          },
          "\n      buffer.write_string(t)\n      code_rbrace(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                123,
                123
              ]
            ]
          },
          "\n      buffer.write_string(\"{\")\n      let _ = code_rbrace(buffer, lexbuf)\n      buffer.write_string(\"}\")\n      code_rbrace(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "Character",
            "0": [
              [
                125,
                125
              ]
            ]
          },
          " $endpos "
        ],
        [
          {
            "$tag": "Capture",
            "0": {
              "$tag": "Character",
              "0": [
                [
                  0,
                  1114111
                ]
              ]
            },
            "1": "t"
          },
          "\n      buffer.write_char(t)\n      code_rbrace(buffer, lexbuf)\n    "
        ],
        [
          {
            "$tag": "EOF"
          },
          " abort(\"Unexpected end of input\") "
        ]
      ]
    }
  ],
  "trailer": ""
}
