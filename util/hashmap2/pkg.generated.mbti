// Generated using `moon info`, DON'T EDIT IT
package "moonbitlang/ulex/util/hashmap2"

// Values
fn[K, V] new(capacity~ : Int) -> T[K, V]

// Errors

// Types and methods
type T[K, V]
fn[K : Hash + Eq, V] T::get(Self[K, V], K) -> V?
fn[K : Hash + Eq, V] T::get_or_init(Self[K, V], K, (K) -> V) -> V
fn[K, V] T::iter(Self[K, V]) -> Iter[(K, V)]
fn[K, V] T::iter2(Self[K, V]) -> Iter2[K, V]
fn[K : Hash + Eq, V] T::set(Self[K, V], K, V) -> Unit
fn[K, V] T::size(Self[K, V]) -> Int

// Type aliases

// Traits

